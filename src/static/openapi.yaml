openapi: 3.0.3
info:
  version: 1.2.0
  title: Federation Management Service
  description: |
    # Introduction
    ---
    RESTful APIs that allow an OP to share the edge cloud resources and capabilities securely to other partner OPs over E/WBI.

    ---
    # API Scope

    ---
    APIs defined in this version of the implementation can be categorized into the following areas:
    * __FederationManagement__ - Create and manage directed federation relationship with a partner OP
    * __AvailabilityZoneInfoSynchronization__ - Management of resources of partner OP zones and status updates
    * __ArtefactManagement__ - Upload, remove, retrieve and update application descriptors, charts and packages over E/WBI towards a partner OP
    * __ApplicationOnboardingManagement__ - Register, retrieve, update and remove applications over E/WBI towards a partner OP
    * __ApplicationDeploymentManagement__ - Create, update, retrieve and terminate application instances over E/WBI towards a partner OP

    ---
    # Definitions
    ---
    This section provides definitions of terminologies commonly referred to throughout the API descriptions.

    * __Accepted Zones__ - List of partner OP zones, which the originating OP has confirmed to use for its edge applications.
    * __Application Provider__ - An application developer, onboarding his/her edge application on a partner operator platform (MEC).
    * __Artefact__ - Descriptor, charts or any other package associated with the application.
    * __Availability Zone__ - Zones that partner OP can offer to share with originating OP.
    * __Device__ - Refers to user equipment like mobile phone, tablet, IOT kit, AR/VR device etc. In context of MEC users use these devices to access edge applications.
    * __Directed Federation__ - A Federation between two OP instances A and B, in which edge compute resources are shared by B to A, but not from A to B.
    * __Edge Application__ - Application designed to run on MEC edge cloud.
    * __E/WBI__ - East west bound interface.
    * __Federation__ - Relationship among member OPs who agrees to offer services and capabilities to the application providers and end users of member OPs.
    * __FederationContextId__ - Partner OP defined string identifier representing a certain federation relationship.
    * __Federation Identifier__ - Identify an operator platform in federation context.
    * __Flavour__ - A group of compute, network and storage resources that can be requested or granted as a single unit.
    * __FlavourIdentifier__ - An OP defined string identifier representing a set of compute, storage and networking resources.
    * __Home OP__ - Used in federation context to identify the OP with which the application developers or user clients are registered.
    * __Instance__ - Application process running on an edge.
    * __LCM Service__ - Partner OP service responsible for life cycle management of edge applications. LCM service is defined as HTTP based API endpoint identified by a well-defined FQDN or IP.
    * __Offered Zones__ - Zones that partner OP offer to share to the Originating OP based on the prior agreement and local configuration.
    * __Onboarding__ - Submitting an application to MEC platform.
    * __OP__ - Operator platform.
    * __OperatorIdentifier__ - String identifier representing the owner of MEC platform. Owner could be an enterprise, a TSP or some other organization.
    * __Originating OP__ - The OP when initiating the federation creation request towards the partner OP is defined as the Originating OP.
    * __Partner OP__ - Operator Platform which offers its Edge Cloud capabilities to the other Operator Platforms via E/WBI.
    * __Resource__ - Compute, networking and storage resources.
    * __ZoneIdentifier__ - An OP defined string identifier representing a certain geographical or logical area where edge resources and services are provided.
    * __Zone Confirmation__ - Procedure via which originating OP acknowledges partner OP about the partner zones it wishes to use.
    * __User Clients__ - Lightweight client applications used to access edge applications. Application users run  these clients on their devices (UE, IOT device, AR/VR device etc).

    ---
    # API Operations
    ---

    __FederationManagement__
    * __CreateFederation__ - Creates a directed federation relationship with a partner OP.
    * __GetFederationDetails__ - Retrieves details about the federation relationship with the partner OP. The response shall provide info about the zones offered by the partner, partner OP network codes, information about edge discovery and LCM service etc.
    * __DeleteFederationDetails__ - Remove existing federation with the partner OP.
    * __NotifyFederationUpdates__ - Call back notification used by partner OP to update originating OP about any change in existing federation relationship.
    * __UpdateFederation__ - API used by the Originating OP towards the partner OP, to update the parameters associated to the existing federation.
    * __QueryFederationContext__ - The Originating OP retrieves federationContextId from the partner OP.

    __AvailabilityZoneInfoSynchronization__
    * __ZoneSubscribe__ - Informs partner OP that originating OP is willing to access the specified zones and partner OP shall reserve compute and network resources for these zones.
    * __ZoneUnsubscribe__ - Informs partner OP that originating OP will no longer access the specified partner OP zone.
    * __GetZoneData__ - Retrieves details about the computation and network resources that partner OP has reserved for an partner OP zone.
    * __Notify Zone Information__ - Call back notification used by partner OP to update originating OP about changes in the resources reserved on a partner zone.

    __ArtefactManagement__
    * __UploadArtefact__ - Uploads application artefact on partner operator platform.
    * __RemoveArtefact__ - Removes an artefact from partner operator platform.
    * __GetArtefact__ - Retrieves details about an artefact from partner operator platform.

    __ApplicationOnboardingManagement__
    * __OnboardApplication__ - Submits an application details to a partner OP. Based on the details provided,  partner OP shall do bookkeeping, resource validation and other pre-deployment operations.
    * __UpdateApplication__ - Updates partner OP about changes in application compute resource requirements, QOS Profile, associated descriptor or change in associated components.
    * __DeboardApplication__ - Removes an application from partner OP.
    * __ViewApplication__ - Retrieves application details from partner OP.
    * __OnboardExistingAppNewZones__ - Make an application available on new additional zones.
    * __LockUnlockApplicationZone__ - Forbid or permit instantiation of application on a zone.

    __Application Instance Lifecycle Management__
    * __InstallApp__ - Instantiates an application on a partner OP zone.
    * __GetAppInstanceDetails__ - Retrieves an application instance details from partner OP.
    * __RemoveApp__ - Terminate an application instance on a partner OP zone.
    * __GetAllAppInstances__ - Retrieves details about all instances of the application running on partner OP zones.
    

    Â© 2023 GSM Association.
    All rights reserved.
externalDocs:
  description: GSMA, E/WBI APIs v1.3.1
  url: http://www.xxxx.com
servers:
- url: "/operatorplatform/federation/v1"
security:
  - oAuth2ClientCredentials:
      - fed-mgmt
components:
  securitySchemes:
    oAuth2ClientCredentials:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: http://127.0.0.1:8080/realms/federation/protocol/openid-connect/token
          scopes:
            fed-mgmt: Access to the federation APIs
  schemas:
    AppIdentifier:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
      description: Identifier used to refer to an application.
    AppProviderId:
      type: string
      pattern: ^[A-Za-z][A-Za-z0-9_]{7,63}$
      description: UserId of the app provider.  Identifier is relevant only in context of this federation.
    ArtefactId:
      type: string
      format: uuid
      description: A globally unique identifier associated with the artefact. Originating OP generates this identifier when artefact is submitted over NBI.
    CountryCode:
      type: string
      description: ISO 3166-1 Alpha-2 code for the country of Partner operator
      pattern: ^[A-Z]{2}$
    CPUArchType:
      type: string
      enum:
        - ISA_X86
        - ISA_X86_64
        - ISA_ARM_64
      description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
    InstanceIdentifier:
      type: string
      #pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
      description: Unique identifier generated by the partner OP to identify an instance of the application on a specific zone.
    InstanceState:
      type: string
      enum:
        - PENDING
        - READY
        - FAILED
        - TERMINATING
      description: Running status of the application instance.
    Ipv4Addr:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$
      example: 198.51.100.1
    Ipv6Addr:
      type: string
      allOf:
        - pattern: ^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$
        - pattern: ^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$
      example: 2001:db8:85a3::8a2e:370:7334
    Fqdn:
      type: string
    FixedNetworkIds:
      type: array
      items:
        type: string
      description: List of network identifier associated with the fixed line network of the operator platform.
      minItems: 1
    FederationContextId:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
      readOnly: true
      description: This identifier shall be provided by the partner OP on successful verification and validation of the federation create request and is used by partner op to identify this newly created federation context. Originating OP shall provide this identifier in any subsequent request towards the partner op.
    FederationIdentifier:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
      description: Globally unique identifier allocated to an operator platform. This is valid and used only in context of MEC federation interface.
    FileId:
      type: string
      format: uuid
      description: A globally unique identifier associated with the image file. Originating OP generates this identifier when file is uploaded over NBI.
    FlavourId:
      type: string
      description: An identifier to refer to a specific combination of compute resources
    GeoLocation:
      type: string
      description: Latitude,Longitude as decimal fraction up to 4 digit precision
      pattern: ^([-+]?)([\d]{1,2})((((\.)([\d]{1,4}))?(,)))(([-+]?)([\d]{1,3})((\.)([\d]{1,4}))?)$
    Mcc:
      type: string
      pattern: ^\d{3}$
    Mnc:
      type: string
      pattern: ^\d{2,3}$
    Port:
      type: integer
      minimum: 0
    Status:
      type: string
      enum:
        - FAILED
        - TEMPORARY_FAILURE
        - AVAILABLE
        - LOCKED
        - NOT_AVAILABLE
    Uri:
      type: string
    Vcpu:
      type: string
      pattern: ^\d+((\.\d{1,3})|(m))?$
      description: Number of vcpus in whole, decimal up to millivcpu, or millivcpu format.
      example:
        whole:
          value: 2
        decimal:
          value: 0.500
        millivcpu:
          value: 500m
    Version:
      type: string
      pattern: ^(\d{1,2}\.)?(\d{1,2}\.)?(\d{1,2})$
      description: Versioning info in the format major.minor.patch
    VirtImageType:
      type: string
      enum:
        - QCOW2
        - DOCKER
        - OVA
      description: Indicate if the file is Container image or VM image (QCOW2, OVA)
    ZoneIdentifier:
      type: string
      pattern: ^[A-Za-z0-9][A-Za-z0-9-]*$
      description: Human readable name of the zone.
    FederationHealthInfo:
      type: object
      required:
        - federationStatus
        # - federationStartTime
        - numOfAcceptedZones
      properties:
        federationStatus:
          $ref: '#/components/schemas/State'
        # federationStartTime:
        #   $ref: '#/components/schemas/dateAndTimeZoneObject'
        numOfAcceptedZones:
          type: string
        numOfActiveAlarms:
          type: string
        numOfApplications:
          type: string
    FederationSupportedAPIs:
      type: object
      required:
        - federationBaseAPI
        - availabilityZoneAPI
        - edgeApplicationAPI
        - artefactAPI
        - fileAPI
      properties:
        federationBaseAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        availabilityZoneAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        edgeApplicationAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        artefactAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        fileAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        serviceAPIFederation:
          $ref: '#/components/schemas/FederationAPIResources'
        resourceMonitoringAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        faultManagementAPI:
          $ref: '#/components/schemas/FederationAPIResources'
        eventManagementAPI:
          $ref: '#/components/schemas/FederationAPIResources'
    FederationAPINames:
      type: string
      enum:
        - FEDERATION
        - AVAILZONE
        - ARTEFACT
        - FILE
        - SVSAPEFED
        - RESMONITOR
        - EVENTMGMT
        - FAULTMGMT
    HttpMethods:
      type: string
      enum:
        - POST
        - PUT
        - PATCH
        - DELETE
        - GET
    HttpResources:
      type: object
      required:
        - href
        - httpMethods
      properties:
        href:
          $ref: '#/components/schemas/Uri'
        httpMethods:
          type: array
          items:
            $ref: '#/components/schemas/HttpMethods'
            minItems: 1
          description: List of HTTP Methods supported for the given API category
    FederationAPIResources:
      type: object
      required:
        - name
        - apiOperations
      properties:
        name:
          $ref: '#/components/schemas/FederationAPINames'
        apiOperations:
          type: array
          items:
            $ref: '#/components/schemas/HttpResources'
            minItems: 1
          description: List of HTTP Methods supported for the given API category
    State:
      type: object
      required:
        - alarmState
      properties:
        alarmState:
          type: string
          enum:
            - RAISED
            - UPDATED
            - CLEAR
          description: Defines the alarm state during its life cycle (raised | updated | cleared).
    serviceType:
      type: string
      enum: ["api_federation"]
      description: An identifier to refer to partner OP capabilities for application providers.
    serviceAPINames:
      type: array
      items:
          type: string
          enum:
            - QualityOnDemand
            - DeviceLocation
            - DeviceStatus
            - SimSwap
            - NumberVerification
            - DeviceIdentifier
      minItems: 1
      description: List of Service API capability names an OP supports and offers to other OPs "quality_on_demand", "device_location" etc.
    serviceAPINameVal:
      type: string
      enum:
        - QualityOnDemand
        - DeviceLocation
        - DeviceStatus
        - SimSwap
        - NumberVerification
        - DeviceIdentifier
      description: Name of the Service API
    serviceRoutingInfo:
      type: array
      items:
          type: string
          pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))?$
      minItems: 1
      description: List of public IP addresses MNO manages for UEs to connect with public data networks
    AppComponentSpecs:
      description: An application may consist of more than one component. Each component is associated with a descriptor and may exposes its services externally or internally.  App providers are required to provide details about all these components, their associated descriptors and their DNS names.
      type: array
      items:
        type: object
        required:
          - artefactId
        properties:
          serviceNameNB:
            type: string
            pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
            description: Must be a valid RFC 1035 label name. This defines the DNS name via which the component can be accessed over NBI. Access via serviceNameNB is restricted on specific ports. Platform shall expose component access externally via this DNS name
          serviceNameEW:
            type: string
            pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
            description: Must be a valid RFC 1035 label name. This defines the DNS name via which the component can be accessed via peer components. Access via serviceNameEW is open on all ports.   Platform shall not expose serviceNameEW externally outside edge.
          componentName:
            type: string
            pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
            description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
          artefactId:
            $ref: '#/components/schemas/ArtefactId'
      minItems: 1
    AppMetaData:
      description: Application metadata details
      type: object
      required:
        - appName
        - version
        - accessToken
      properties:
        appName:
          type: string
          pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
          description: Name of the application. Application provider define a human readable name for the application
        version:
          type: string
          description: Version info of the application
        appDescription:
          type: string
          minLength: 16
          maxLength: 256
          description: Brief application description provided by application provider
        mobilitySupport:
          type: boolean
          default: false
          description: Indicates if an application is sensitive to user mobility and can be relocated. Default is âFALSEâ
        accessToken:
          type: string
          pattern: ^[A-Za-z][A-Za-z0-9_]{31,63}$
          description: An application Access key, to be used with UNI interface to authorize UCs Access to a given application
        category:
          type: string
          enum:
            - IOT
            - HEALTH_CARE
            - GAMING
            - VIRTUAL_REALITY
            - SOCIALIZING
            - SURVEILLANCE
            - ENTERTAINMENT
            - CONNECTIVITY
            - PRODUCTIVITY
            - SECURITY
            - INDUSTRIAL
            - EDUCATION
            - OTHERS
          description: Possible categorization of the application
    AppQoSProfile:
      description: Parameters corresponding to the performance constraints, tenancy details etc.
      type: object
      required:
        - latencyConstraints
      properties:
        latencyConstraints:
          type: string
          enum:
            - NONE
            - LOW
            - ULTRALOW
          description: Latency requirements for the application. Allowed values (non-standardized) are none, low and ultra-low. Ultra-Low may corresponds to range 15 - 30 msec, Low correspond to range 30 - 50 msec. None means 51 and above
        bandwidthRequired:
          type: integer
          format: int32
          minimum: 1
          description: Data transfer bandwidth requirement (minimum limit) for the application. It should in Mbits/sec
        multiUserClients:
          type: string
          enum:
            - APP_TYPE_SINGLE_USER
            - APP_TYPE_MULTI_USER
          default: APP_TYPE_SINGLE_USER
          description: Single user type application are designed to serve just one client. Multi user type application is designed to serve multiple clients
        noOfUsersPerAppInst:
          type: integer
          default: 1
          description: Maximum no of clients that can connect to an instance of this application. This parameter is relevant only for application of type multi user
        appProvisioning:
          type: boolean
          default: true
          description: Define if application can be instantiated or not
    CallbackCredentials:
      type: object
      description: Authentication credentials for callbacks. Callbacks use the same security scheme, flows, and scopes as the forward path.
      required:
        - tokenUrl
        - clientId
        - clientSecret
      properties:
        tokenUrl:
          $ref: '#/components/schemas/Uri'
          description: Oauth2 token endpoint.
        clientId:
          type: string
          description: Client id for oauth2 client credentials flow.
        clientSecret:
          type: string
          description: Client secret for oauth2 client credentials flow.
    CompEnvParams:
      description: Environment variables are key value pairs that should be injected when component in instantiated
      type: object
      required:
        - envVarName
        - envValueType
      properties:
        envVarName:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
          description: Name of environment variable
        envValueType:
          type: string
          enum:
            - USER_DEFINED
            - PLATFORM_DEFINED_DYNAMIC_PORT
            - PLATFORM_DEFINED_DNS
            - PLATFORM_DEFINED_IP
        envVarValue:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
          description: Value to be assigned to environment variable
        envVarSrc:
          type: string
          description: Full path of parameter from componentSpec that should be used to generate the environment value. Eg. networkResourceProfile[1]. interfaceId.
    CommandLineParams:
      description: List of commands and arguments that shall be invoked when the component instance is created. This is valid only for container based deployment.
      type: object
      required:
        - command
      properties:
        command:
          type: array
          items:
            type: string
          description: List of commands that application should invoke when an instance is created.
        commandArgs:
          type: array
          items:
            type: string
          description: List of arguments required by the command.
    DeploymentConfig:
      description: Configuration used when deploying a component. May override other ComponentSpec parameters related to deployment like restart policy, command line parameters, environment variables, etc.
      type: object
      required:
        - configType
        - contents
      properties:
        configType:
          type: string
          enum:
            - DOCKER_COMPOSE
            - KUBERNETES_MANIFEST
            - CLOUD_INIT
            - HELM_VALUES
          description: Config type.
        contents:
          type: string
          description: Contents of the configuration.
    ComponentSpec:
      description: Details about compute, networking and storage requirements for each component of the application. App provider should define all information needed to instantiate the component. If artefact is being defined at component level this section should have information just about the component. In case the artefact is being defined at application level the section should provide details about all the components.
      type: object
      required:
        - componentName
        - images
        - numOfInstances
        - restartPolicy
        - computeResourceProfile
      properties:
        componentName:
          type: string
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
          description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
        images:
          description: List of all images associated with the component. Images are specified using the file identifiers. Partner OP provides these images using file upload api.
          type: array
          items:
            $ref: '#/components/schemas/FileId'
          minItems: 1
        numOfInstances:
          type: integer
          format: int32
          description: Number of component instances to be launched.
        restartPolicy:
          type: string
          enum:
            - RESTART_POLICY_ALWAYS
            - RESTART_POLICY_NEVER
          description: How the platform shall handle component failure
        commandLineParams:
          $ref: '#/components/schemas/CommandLineParams'
        exposedInterfaces:
          description: Each application component exposes some ports either for external users or for inter component communication. Application provider is required to specify which ports are to be exposed and the type of traffic that will flow through these ports.
          type: array
          items:
            $ref: '#/components/schemas/InterfaceDetails'
          minItems: 1
        computeResourceProfile:
          $ref: '#/components/schemas/ComputeResourceInfo'
        compEnvParams:
          type: array
          items:
            $ref: '#/components/schemas/CompEnvParams'
        deploymentConfig:
          $ref: '#/components/schemas/DeploymentConfig'
        persistentVolumes:
          description: The ephemeral volume a container process may need to temporary store internal data
          type: array
          items:
            $ref: '#/components/schemas/PersistentVolumeDetails'
          minItems: 1
    ComputeResourceInfo:
      type: object
      required:
        - cpuArchType
        - numCPU
        - memory
      properties:
        cpuArchType:
          type: string
          enum:
            - ISA_X86_64
            - ISA_ARM_64
          description: CPU Instruction Set Architecture (ISA) E.g., Intel, Arm etc.
        numCPU:
          $ref: '#/components/schemas/Vcpu'
        memory:
          type: integer
          format: int64
          description: Amount of RAM in Mbytes
        diskStorage:
          type: integer
          format: int32
          description: Amount of disk storage in Gbytes for a given ISA type
        gpu:
          type: array
          items:
            $ref: '#/components/schemas/GpuInfo'
        vpu:
          type: integer
          description: Number of Intel VPUs available for a given ISA type
        fpga:
          type: integer
          description: Number of FPGAs available for a given ISA type
        hugepages:
          type: array
          items:
            $ref: '#/components/schemas/HugePage'
        cpuExclusivity:
          type: boolean
          description: Support for exclusive CPUs
    FederationRequestData:
      type: object
      required:
        - origOPFederationId
        - initialDate
        - partnerStatusLink
      properties:
        origOPFederationId:
          $ref: '#/components/schemas/FederationIdentifier'
        origOPCountryCode:
          $ref: '#/components/schemas/CountryCode'
        origOPMobileNetworkCodes:
          $ref: '#/components/schemas/MobileNetworkIds'
        origOPFixedNetworkCodes:
          $ref: '#/components/schemas/FixedNetworkIds'
        initialDate:
          type: string
          format: date-time
          description: Time zone info of the federation initiated by the originating OP
        partnerStatusLink:
          $ref: '#/components/schemas/Uri'
        partnerCallbackCredentials:
          $ref: '#/components/schemas/CallbackCredentials'
    FederationResponseData:
      type: object
      required:
        - partnerOPFederationId
        - federationContextId
        - platformCaps
      properties:
        partnerOPFederationId:
          $ref: '#/components/schemas/FederationIdentifier'
        partnerOPCountryCode:
          $ref: '#/components/schemas/CountryCode'
        federationContextId:
          $ref: '#/components/schemas/FederationContextId'
        edgeDiscoveryServiceEndPoint:
          $ref: '#/components/schemas/ServiceEndpoint'
        lcmServiceEndPoint:
          $ref: '#/components/schemas/ServiceEndpoint'
        partnerOPMobileNetworkCodes:
          $ref: '#/components/schemas/MobileNetworkIds'
        partnerOPFixedNetworkCodes:
          $ref: '#/components/schemas/FixedNetworkIds'
        offeredAvailabilityZones:
          type: array
          items:
            $ref: '#/components/schemas/ZoneDetails'
          minItems: 1
          description: List of zones, which the operator platform wishes to make available to developers/ISVs of requesting operator platform.
        platformCaps:
          type: array
          items:
            type: string
            enum:
              - homeRouting
              - Anchoring
              - serviceAPIs
              - faultMgmt
              - eventMgmt
              - resourceMonitor
            description: Home routing - Operator platform is capable of routing edge application data traffic from its edges to user device in their home location. This is the case where user devices are served in their home region (requesting platform region, non-roaming) but the corresponding edge application are in operator platform edges. Anchoring - Operator platform is capable of routing edge application traffic for roaming user devices to edge application in user device home network. Service APIs - Capability to handle Service APIs (e.g., CAMARA APIs) from the Leading OP
    Flavour:
      type: object
      required:
        - flavourId
        - cpuArchType
        - supportedOSTypes
        - numCPU
        - memorySize
        - storageSize
      properties:
        flavourId:
          $ref: '#/components/schemas/FlavourId'
        cpuArchType:
          $ref: '#/components/schemas/CPUArchType'
        supportedOSTypes:
          description: A list of operating systems which this flavour configuration can support e.g., RHEL Linux, Ubuntu 18.04 LTS, MS Windows 2012 R2.
          type: array
          items:
            $ref: '#/components/schemas/OSType'
          minItems: 1
        numCPU:
          type: integer
          format: int32
          description: Number of available vCPUs
        memorySize:
          type: integer
          format: int32
          description: Amount of RAM in Mbytes
        storageSize:
          type: integer
          format: int32
          description: Amount of disk storage in Gbytes
        gpu:
          type: array
          items:
            $ref: '#/components/schemas/GpuInfo'
        fpga:
          type: integer
          format: int32
          description: Number of FPGAs

        vpu:
          type: integer
          description: Number of Intel VPUs available
        hugepages:
          type: array
          items:
            $ref: '#/components/schemas/HugePage'
        cpuExclusivity:
          type: boolean
          description: Support for exclusive CPUs
    GpuInfo:
      type: object
      required:
        - gpuVendorType
        - gpuModeName
        - gpuMemory
        - numGPU
      properties:
        gpuVendorType:
          type: string
          enum:
            - GPU_PROVIDER_NVIDIA
            - GPU_PROVIDER_AMD
          description: GPU vendor name e.g. NVIDIA, AMD etc.
          #example: Nvidia
        gpuModeName:
          type: string
          description: Model name corresponding to vendorType may include info e.g. for NVIDIA, model name could be âTesla M60â, âTesla V100â etc.
        gpuMemory:
          type: integer
          description: GPU memory in Mbytes
        numGPU:
          type: integer
          description: Number of GPUs
    HugePage:
      type: object
      required:
        - pageSize
        - number
      properties:
        pageSize:
          type: string
          enum:
            - 2MB
            - 4MB
            - 1GB
          description: Size of hugepage
        number:
          type: integer
          description: Total number of huge pages
    InterfaceDetails:
      type: object
      required:
        - interfaceId
        - commProtocol
        - commPort
        - visibilityType
      properties:
        interfaceId:
          type: string
          description: Each Port and corresponding traffic protocol exposed by the component is identified by a name. Application client on user device requires this to uniquely identify the interface.
          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
        commProtocol:
          type: string
          enum:
            - TCP
            - UDP
            - HTTP_HTTPS
          description: Defines the IP transport communication protocol i.e., TCP, UDP or HTTP
        commPort:
          type: integer
          format: int32
          minimum: 1
          maximum: 65535
          description: Port number exposed by the component. OP may generate a dynamic port towards the UCs corresponding to this internal port and forward the client traffic from dynamic port to container Port.
        visibilityType:
          description: Defines whether the interface is exposed to outer world or not i.e., external, or internal. If this is set to "external", then it is exposed to external applications otherwise it is exposed internally to edge application components within edge cloud. When exposed to external world, an external dynamic port is assigned for UC traffic and mapped to the internal container Port
          type: string
          enum:
            - VISIBILITY_EXTERNAL
            - VISIBILITY_INTERNAL
        network:
          type: string
          pattern: ^[A-Za-z][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
          description: Name of the network.  In case the application has to be associated with more than 1 network then app provider must define the name of the network on which this interface has to be exposed.  This parameter is required only if the port has to be exposed on a specific network other than default.
        InterfaceName:
          type: string
          pattern: ^[a-z][a-z0-9]{3}$
          description: Interface Name. Required only if application has to be attached to a network other than default.
    InvalidParam:
      type: object
      properties:
        param:
          type: string
        reason:
          type: string
      required:
        - param
    MobileNetworkIds:
      type: object
      properties:
        mcc:
          $ref: '#/components/schemas/Mcc'
        mncs:
          type: array
          items:
            $ref: '#/components/schemas/Mnc'
          minItems: 1
    ObjectRepoLocation:
      type: object
      properties:
        repoURL:
          $ref: '#/components/schemas/Uri'
        userName:
          type: string
          description: Username to access the repository
        password:
          type: string
          description: Password to access the repository
        token:
          type: string
          description: Authorization token to access the repository
    OSType:
      type: object
      required:
        - architecture
        - distribution
        - version
        - license
      properties:
        architecture:
          type: string
          enum:
            - x86_64
            - x86
          example: x86_64
        distribution:
          type: string
          enum:
            - RHEL
            - UBUNTU
            - COREOS
            - FEDORA
            - WINDOWS
            - OTHER

        version:
          type: string
          enum:
            - OS_VERSION_UBUNTU_2204_LTS
            - OS_VERSION_RHEL_8
            - OS_VERSION_RHEL_7
            - OS_VERSION_DEBIAN_11
            - OS_VERSION_COREOS_STABLE
            - OS_MS_WINDOWS_2012_R2
            - OTHER

        license:
          type: string
          enum:
            - OS_LICENSE_TYPE_FREE
            - OS_LICENSE_TYPE_ON_DEMAND
            - NOT_SPECIFIED
    PersistentVolumeDetails:
      type: object
      required:
        - volumeSize
        - volumeMountPath
        - volumeName
      properties:
        volumeSize:
          type: string
          enum:
            - 10Gi
            - 20Gi
            - 50Gi
            - 100Gi
          description: size of the volume given by user (10GB, 20GB, 50 GB or 100GB)
        volumeMountPath:
          type: string
          description: Defines the mount path of the volume
        volumeName:
          type: string
          description: Human readable name for the volume
        ephemeralType:
          type: boolean
          default: false
          description: It indicates the ephemeral storage on the node and contents are not preserved if containers restarts
        accessMode:
          type: string
          enum:
            - RW
            - RO
          default: RW
          description: Values are RW (read/write) and RO (read-only)l
        sharingPolicy:
          type: string
          enum:
            - EXCLUSIVE
            - SHARED
          default: EXCLUSIVE
          description: Exclusive or Shared. If shared, then in case of multiple containers same volume will be shared across the containers.
    ProblemDetails:
      type: object
      properties:
        title:
          type: string
        detail:
          type: string
        cause:
          type: string
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
    ServiceEndpoint:
      type: object
      required:
        - port
      anyOf:
        - required:
            - fqdn
        - required:
            - ipv4Addresses
        - required:
            - ipv6Addresses
      properties:
        port:
          $ref: '#/components/schemas/Port'
        fqdn:
          $ref: '#/components/schemas/Fqdn'
        ipv4Addresses:
          type: array
          items:
            $ref: '#/components/schemas/Ipv4Addr'
          minItems: 1
        ipv6Addresses:
          type: array
          items:
            $ref: '#/components/schemas/Ipv6Addr'
          minItems: 1
    ZoneDetails:
      type: object
      required:
        - zoneId
        - geolocation
        - geographyDetails
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'
        geolocation:
          $ref: '#/components/schemas/GeoLocation'
        geographyDetails:
          type: string
          description: Details about cities or state covered by the edge. Details about the type of locality for eg rural, urban, industrial etc. This information is defined in human readable form.
    ZoneRegistrationRequestData:
      type: object
      required:
        - acceptedAvailabilityZones
        - availZoneNotifLink
      properties:
        acceptedAvailabilityZones:
          type: array
          items:
            $ref: '#/components/schemas/ZoneIdentifier'
          minItems: 1
        availZoneNotifLink:
          $ref: '#/components/schemas/Uri'
    ZoneRegistrationResponseData:
      type: object
      required:
        - acceptedZoneResourceInfo
      properties:
        acceptedZoneResourceInfo:
          type: array
          items:
            $ref: '#/components/schemas/ZoneRegisteredData'

          minItems: 1
    ZoneRegisteredData:
      type: object
      required:
        - zoneId
        - reservedComputeResources
        - computeResourceQuotaLimits
        - flavoursSupported
      properties:
        zoneId:
          $ref: '#/components/schemas/ZoneIdentifier'
        reservedComputeResources:
          description: Resources exclusively reserved for the originator OP.
          type: array
          items:
            $ref: '#/components/schemas/ComputeResourceInfo'
          minItems: 1
        computeResourceQuotaLimits:
          description: Max quota on resources partner OP allows over reserved resources.
          type: array
          items:
            $ref: '#/components/schemas/ComputeResourceInfo'
          minItems: 1
        flavoursSupported:
          type: array
          items:
            $ref: '#/components/schemas/Flavour'
          minItems: 1
        networkResources:
          type: object
          required:
            - egressBandWidth
            - dedicatedNIC
            - supportSriov
            - supportDPDK
          properties:
            egressBandWidth:
              type: integer
              format: int32
              description: Max dl throughput that this edge can offer. It is defined in Mbps.
            dedicatedNIC:
              type: integer
              format: int32
              description: Number of network interface cards which can be dedicatedly assigned to application pods on isolated networks. This includes virtual as well physical NICs
            supportSriov:
              type: boolean
              description: If this zone support SRIOV networks or not
            supportDPDK:
              type: boolean
              description: If this zone supports DPDK based networking.
        zoneServiceLevelObjsInfo:
          type: object
          description: It is a measure of the actual amount of data that is being sent over a network per unit of time and indicates mÃ¡ximum supported value for a zone
          required:
            - latencyRanges
            - jitterRanges
            - throughputRanges
          properties:
            latencyRanges:
              type: object
              properties:
                minLatency:
                  type: integer
                  format: int32
                  minimum: 1
                  description: The time for data/packet to reach from UC to edge application. It represent mÃ­nimum latency in milli seconds that may exist between UCs and edge apps in this zone but it can be higher in actual.
                maxLatency:
                  type: integer
                  format: int32
                  description: The maximum limit of latency between UC and Edge App in milli seconds.
            jitterRanges:
              type: object
              properties:
                minJitter:
                  type: integer
                  format: int32
                  minimum: 1
                maxJitter:
                  type: integer
                  format: int32
                  description: The maximum limit of network jitter between UC and Edge App in milli seconds.
            throughputRanges:
              type: object
              properties:
                minThroughput:
                  type: integer
                  format: int32
                  minimum: 1
                  description: The minimum limit of network throughput between UC and Edge App in Mega bits per seconds (Mbps).
                maxThroughput:
                  type: integer
                  format: int32
                  description: The maximum limit of network throughput between UC and Edge App in Mega bits per seconds (Mbps).

              #
              # HTTP responses
              #
  responses:
    "400":
      description: Bad request
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "401":
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "404":
      description: Not Found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "409":
      description: Conflict
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "412":
      description: Precondition Failed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "422":
      description: Unprocessable Entity
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "500":
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "501":
      description: Not Implemented
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "503":
      description: Service Unavailable
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "520":
      description: Web Server Returned an Unknown Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    default:
      description: Generic Error
paths:
  /partner:
    post:
      summary: Creates one direction federation with partner operator platform.
      operationId: CreateFederation
      tags:
        - FederationManagement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FederationRequestData'
      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FederationResponseData'
          headers:
            Location:
              description: 'Contains the URI of the newly created resource, according to the structure: {apiRoot}/operatorplatform/federation/v1/partner/{federationContextId}'
              required: true
              schema:
                type: string
            Accept-Encoding:
              description: Accept-Encoding, described in IETF RFC 7694
              schema:
                type: string
            Content-Encoding:
              description: Content-Encoding, described in IETF RFC 7231
              schema:
                type: string
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onPartnerStatusEvent:
          '{$request.body#/partnerStatusLink }':
            post:
              requestBody:
                description: |
                  OP uses this callback api to notify partner OP about change in federation status, federation metadata or offered zone details. Allowed combinations of objectType and operationType are
                  - FEDERATION - STATUS: Status specified by parameter 'federationStatus'.
                  - ZONES - STATUS: Status specified by parameter 'zoneStatus'.
                  - ZONES - ADD: Use parameter 'addZones' to define add new zones
                  - ZONES - REMOVE: Use parameter 'removeZones' to define remove zones.
                  - EDGE_DISCOVERY_SERVICE - UPDATE: Use parameter 'edgeDiscoverySvcEndPoint' to specify new endpoints
                  - LCM_SERVICE - UPDATE: Use parameter 'lcmSvcEndPoint' to specify new endpoints
                  - MOBILE_NETWORK_CODES - ADD: Use parameter 'addMobileNetworkIds' to define new mobile network codes.
                  - MOBILE_NETWORK_CODES - REMOVE: Use parameter 'removeMobileNetworkIds' to remove mobile network codes.
                  - FIXED_NETWORK_CODES - ADD: Use parameter 'addFixedNetworkIds' to define new fixed network codes.
                  - FIXED_NETWORK_CODES - REMOVE: Use parameter 'removeFixedNetworkIds' to remove fixed network codes.
                  - SERVICE_APIS - ADD/REMOVE: Parameter Usage 'addServiceAPIs / removeServiceAPIs' to add or remove Service APIs support.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - objectType
                        - operationType
                        - modificationDate
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        objectType:
                          type: string
                          enum:
                            - FEDERATION
                            - ZONES
                            - EDGE_DISCOVERY_SERVICE
                            - LCM_SERVICE
                            - MOBILE_NETWORK_CODES
                            - FIXED_NETWORK_CODES
                            - SERVICE_APIS
                        operationType:
                          type: string
                          enum:
                            - STATUS
                            - UPDATE
                            - ADD
                            - REMOVE
                        edgeDiscoverySvcEndPoint:
                          $ref: '#/components/schemas/ServiceEndpoint'
                        lcmSvcEndPoint:
                          $ref: '#/components/schemas/ServiceEndpoint'
                        addMobileNetworkIds:
                          $ref: '#/components/schemas/MobileNetworkIds'
                        removeMobileNetworkIds:
                          $ref: '#/components/schemas/MobileNetworkIds'
                        addFixedNetworkIds:
                          $ref: '#/components/schemas/FixedNetworkIds'
                        removeFixedNetworkIds:
                          $ref: '#/components/schemas/FixedNetworkIds'
                        addZones:
                          type: array
                          items:
                            $ref: '#/components/schemas/ZoneDetails'
                          description: List of zones, which the operator platform wishes to make available to developers/ISVs of requesting operator platform.
                          minItems: 1
                        removeZones:
                          type: array
                          items:
                            $ref: '#/components/schemas/ZoneIdentifier'
                          description: List of zones, which the operator platform no longer wishes to share.
                          minItems: 1
                        addServiceAPIs:
                          $ref: '#/components/schemas/serviceAPINames'
                        removeServiceAPIs:
                          $ref: '#/components/schemas/serviceAPINames'
                        zoneStatus:
                          type: array
                          items:
                            type: object
                            required:
                              - zoneId
                              - status
                            properties:
                              zoneId:
                                $ref: '#/components/schemas/ZoneIdentifier'
                              status:
                                $ref: '#/components/schemas/Status'
                          minItems: 1
                        federationStatus:
                          $ref: '#/components/schemas/Status'
                        modificationDate:
                          type: string
                          format: date-time
                          description: Date and time of the federation modification by the originating partner OP
              responses:
                "204":
                  description: Expected response to a successful call back processing
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
  /{federationContextId}/partner:
    get:
      summary: Retrieves details about the federation context with the partner OP. The response shall provide info about the zones offered by the partner, partner OP network codes, information about edge discovery and LCM service etc.
      operationId: GetFederationDetails
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - edgeDiscoveryServiceEndPoint
                  - lcmServiceEndPoint
                properties:
                  edgeDiscoveryServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  lcmServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  allowedMobileNetworkIds:
                    $ref: '#/components/schemas/MobileNetworkIds'
                  allowedFixedNetworkIds:
                    $ref: '#/components/schemas/FixedNetworkIds'
                  offeredAvailabilityZones:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZoneDetails'
                    minItems: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    patch:
      summary: API used by the Originating OP towards the partner OP, to update the parameters associated to the existing federation
      operationId: UpdateFederation
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        required: true
        description: Details about changes origination OP wished to apply
        content:
          application/json:
            schema:
              type: object
              required:
                - objectType
                - operationType
                - modificationDate
              properties:
                objectType:
                  type: string
                  enum:
                    - MOBILE_NETWORK_CODES
                    - FIXED_NETWORK_CODES
                operationType:
                  type: string
                  enum:
                    - ADD_CODES
                    - REMOVE_CODES
                    - UPDATE_CODES
                addMobileNetworkIds:
                  $ref: '#/components/schemas/MobileNetworkIds'
                removeMobileNetworkIds:
                  $ref: '#/components/schemas/MobileNetworkIds'
                addFixedNetworkIds:
                  $ref: '#/components/schemas/FixedNetworkIds'
                removeFixedNetworkIds:
                  $ref: '#/components/schemas/FixedNetworkIds'
                modificationDate:
                  type: string
                  format: date-time
                  description: Date and time of the federation modification by the originating partner OP
      responses:
        "200":
          description: Federation meta-info request accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - edgeDiscoveryServiceEndPoint
                  - lcmServiceEndPoint
                properties:
                  edgeDiscoveryServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  lcmServiceEndPoint:
                    $ref: '#/components/schemas/ServiceEndpoint'
                  allowedMobileNetworkIds:
                    $ref: '#/components/schemas/MobileNetworkIds'
                  allowedFixedNetworkIds:
                    $ref: '#/components/schemas/FixedNetworkIds'
                  offeredAvailabilityZones:
                    type: array
                    items:
                      $ref: '#/components/schemas/ZoneDetails'
                    minItems: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Remove existing federation with the partner OP
      operationId: DeleteFederationDetails
      tags:
        - FederationManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      responses:
        "200":
          description: Federation removed successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /fed-context-id:
    get:
      summary: Retrieves the existing federationContextId with partner operator platform.
      operationId: GetFederationContextId
      tags:
        - FederationManagement
      responses:
        "200":
          description: Federation context identifier retrieval request accepted
          content:
            application/json:
              schema:
                type: object
                required:
                  - FederationContextId
                properties:
                  FederationContextId:
                    $ref: '#/components/schemas/FederationContextId'
          headers:
            Location:
              description: 'Contains the URI of the existing resource, according to the structure: {apiRoot}/operatorplatform/federation/v1/partner/{federationContextId}'
              required: true
              schema:
                type: string
            Accept-Encoding:
              description: Accept-Encoding, described in IETF RFC 7694
              schema:
                type: string
            Content-Encoding:
              description: Content-Encoding, described in IETF RFC 7231
              schema:
                type: string
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/zones:
    post:
      summary: Originating OP informs partner OP that it is willing to access the specified zones and partner OP shall reserve compute and network resources for these zones.
      operationId: ZoneSubscribe
      tags:
        - AvailabilityZoneInfoSynchronization
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneRegistrationRequestData'
        required: true
      responses:
        "200":
          description: Zone registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneRegistrationResponseData'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onZoneResourceUpdateEvent:
          '{$request.body#/availZoneNotifLink}':
            post:
              requestBody:
                description: Notification about resource availability.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - zoneId
                        - zoneResUpdInfo
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        zoneId:
                          $ref: '#/components/schemas/ZoneIdentifier'
                        zoneResUpdInfo:
                          type: array
                          items:
                            type: object
                            minProperties: 1
                            properties:
                              availableCompResources:
                                description: Resources exclusively reserved for the originator OP.
                                type: array
                                items:
                                  $ref: '#/components/schemas/ComputeResourceInfo'
                                minItems: 1
                              availableNetResources:
                                type: object
                                properties:
                                  egressBandWidth:
                                    type: integer
                                    format: int32
                                    description: Max dl throughput that this edge can offer. It is defined in Mbps.
                                  dedicatedNIC:
                                    type: integer
                                    format: int32
                                  supportSriov:
                                    type: boolean
                                    description: If this zone support SRIOV networks or not
                                  supportDPDK:
                                    type: boolean
                                    description: If this zone supports DPDK based networking
                                minProperties: 1
              responses:
                "200":
                  description: Zone info notification acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
  /{federationContextId}/zones/{zoneId}:
    delete:
      summary: Assert usage of a partner OP zone. Originating OP informs partner OP that it will no longer access the specified zone.
      operationId: ZoneUnsubscribe
      tags:
        - AvailabilityZoneInfoSynchronization
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Zone deregistered successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    get:
      summary: Retrieves details about the computation and network resources that partner OP has reserved for this zone.
      operationId: GetZoneData
      tags:
        - AvailabilityZoneInfoSynchronization
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Zone metadata
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZoneRegisteredData'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/artefact:
    post:
      summary: Uploads application artefact on partner OP. Artefact is a zip file containing scripts and/or packaging files like Terraform or Helm which are required to create an instance of an application.
      operationId: UploadArtefact
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        description: An application can consist of multiple components. App providers are allowed to define separate artefacts for each component or they could define a consolidated artefact at application level.
        content:
          application/json:
            schema:
              type: object
              properties:
                artefactId:
                  $ref: '#/components/schemas/ArtefactId'
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                artefactName:
                  type: string
                  pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                  description: Name of the artefact.
                artefactVersionInfo:
                  type: string
                  description: Artefact version information
                artefactDescription:
                  type: string
                  maxLength: 256
                  description: Brief description of the artefact by the application provider
                artefactVirtType:
                  type: string
                  enum:
                    - VM_TYPE
                    - CONTAINER_TYPE
                artefactFileName:
                  type: string
                  minLength: 8
                  maxLength: 32
                  description: Name of the file.
                artefactFileFormat:
                  type: string
                  enum:
                    - WINZIP
                    - TAR
                    - TEXT
                    - TARGZ
                  description: Artefacts like Helm charts or Terraform scripts may need compressed format.
                artefactDescriptorType:
                  type: string
                  enum:
                    - HELM
                    - TERRAFORM
                    - ANSIBLE
                    - SHELL
                    - COMPONENTSPEC
                  description: Type of descriptor present in the artefact.  App provider can either define either a Helm chart or a Terraform script or container spec.
                repoType:
                  type: string
                  enum:
                    - PRIVATEREPO
                    - PUBLICREPO
                    - UPLOAD
                  description: Artefact or file repository location. PUBLICREPO is used of public URLs like GitHub, Helm repo, docker registry etc., PRIVATEREPO is used for private repo managed by the application developer, UPLOAD is for the case when artefact/file is uploaded from MEC web portal. OP should pull the image from ârepoUrl' immediately after receiving the request and then send back the response. In case the repoURL corresponds to a docker registry, use docker v2 http api to do the pull.
                artefactRepoLocation:
                  $ref: '#/components/schemas/ObjectRepoLocation'
                artefactFile:
                  type: string
                  format: binary
                  description: Helm archive/Terraform archive/container spec file or Binary image associated with an application component.
                componentSpec:
                  description: Details about compute, networking and storage requirements for each component of the application. App provider should define all information needed to instantiate the component. If artefact is being defined at component level this section should have information just about the component. In case the artefact is being defined at application level the section should provide details about all the components.
                  type: array
                  items:
                    $ref: '#/components/schemas/ComponentSpec'
                  minItems: 1
#          multipart/form-data:
#            schema:
#              type: object
#              required:
#                - artefactId
#                - appProviderId
#                - artefactName
#                - artefactVersionInfo
#                - artefactVirtType
#                - artefactDescriptorType
#                - componentSpec
#              properties:
#                artefactId:
#                  $ref: '#/components/schemas/ArtefactId'
#                appProviderId:
#                  $ref: '#/components/schemas/AppProviderId'
#                artefactName:
#                  type: string
#                  pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
#                  description: Name of the artefact.
#                artefactVersionInfo:
#                  type: string
#                  description: Artefact version information
#                artefactDescription:
#                  type: string
#                  maxLength: 256
#                  description: Brief description of the artefact by the application provider
#                artefactVirtType:
#                  type: string
#                  enum:
#                    - VM_TYPE
#                    - CONTAINER_TYPE
#                artefactFileName:
#                  type: string
#                  minLength: 8
#                  maxLength: 32
#                  description: Name of the file.
#                artefactFileFormat:
#                  type: string
#                  enum:
#                    - WINZIP
#                    - TAR
#                    - TEXT
#                    - TARGZ
#                  description: Artefacts like Helm charts or Terraform scripts may need compressed format.
#                artefactDescriptorType:
#                  type: string
#                  enum:
#                    - HELM
#                    - TERRAFORM
#                    - ANSIBLE
#                    - SHELL
#                    - COMPONENTSPEC
#                  description: Type of descriptor present in the artefact.  App provider can either define either a Helm chart or a Terraform script or container spec.
#                repoType:
#                  type: string
#                  enum:
#                    - PRIVATEREPO
#                    - PUBLICREPO
#                    - UPLOAD
#                  description: Artefact or file repository location. PUBLICREPO is used of public URLs like GitHub, Helm repo, docker registry etc., PRIVATEREPO is used for private repo managed by the application developer, UPLOAD is for the case when artefact/file is uploaded from MEC web portal. OP should pull the image from ârepoUrl' immediately after receiving the request and then send back the response. In case the repoURL corresponds to a docker registry, use docker v2 http api to do the pull.
#                artefactRepoLocation:
#                  $ref: '#/components/schemas/ObjectRepoLocation'
#                artefactFile:
#                  type: string
#                  format: binary
#                  description: Helm archive/Terraform archive/container spec file or Binary image associated with an application component.
#                componentSpec:
#                  description: Details about compute, networking and storage requirements for each component of the application. App provider should define all information needed to instantiate the component. If artefact is being defined at component level this section should have information just about the component. In case the artefact is being defined at application level the section should provide details about all the components.
#                  type: array
#                  items:
#                    $ref: '#/components/schemas/ComponentSpec'
#                  minItems: 1
        required: true
      responses:
        "200":
          description: Artefact uploaded successfully
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/artefact/{artefactId}:
    get:
      summary: Retrieves details about an artefact.
      operationId: GetArtefact
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: artefactId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ArtefactId'
      responses:
        "200":
          description: Artefact details
          content:
            application/json:
              schema:
                type: object
                required:
                  - artefactId
                  - appProviderId
                  - artefactName
                  - artefactVersionInfo
                  - artefactVirtType
                  - artefactDescriptorType
                properties:
                  artefactId:
                    $ref: '#/components/schemas/ArtefactId'
                  appProviderId:
                    $ref: '#/components/schemas/AppProviderId'
                  artefactName:
                    type: string
                    pattern: ^[A-Za-z][A-Za-z0-9_]{7,31}$
                    description: Name of the artefact.
                  artefactDescription:
                    type: string
                    maxLength: 256
                    description: Brief description of the artefact by the application provider
                  artefactVersionInfo:
                    type: string
                    description: Artefact version information
                  artefactVirtType:
                    type: string
                    enum:
                      - VM_TYPE
                      - CONTAINER_TYPE
                  artefactFileName:
                    type: string
                    minLength: 8
                    maxLength: 32
                    description: Name of the file.
                  artefactFileFormat:
                    type: string
                    enum:
                      - WINZIP
                      - TAR
                      - TEXT
                      - TARGZ
                    description: Artefacts like Helm charts or Terraform scripts may need compressed format.
                  artefactDescriptorType:
                    type: string
                    enum:
                      - HELM
                      - TERRAFORM
                      - ANSIBLE
                      - SHELL
                      - COMPONENTSPEC
                    description: Type of descriptor present in the artefact.  App provider can either define either a Helm chart or a Terraform script or container spec.
                  repoType:
                    type: string
                    enum:
                      - PRIVATEREPO
                      - PUBLICREPO
                      - UPLOAD
                    description: Artefact or file repository location. PUBLICREPO is used of public URLs like GitHub, Helm repo, docker registry etc., PRIVATEREPO is used for private repo managed by the application developer, UPLOAD is for the case when artefact/file is uploaded from MEC web portal.  OP should pull the image from ârepoUrl' immediately after receiving the request and then send back the response. In case the repoURL corresponds to a docker registry, use docker v2 http api to do the pull.
                  artefactRepoLocation:
                    $ref: '#/components/schemas/ObjectRepoLocation'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Removes an artefact from partner OP.
      operationId: RemoveArtefact
      tags:
        - ArtefactManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: artefactId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ArtefactId'
      responses:
        "200":
          description: Artefact deletion successful
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/onboarding:
    post:
      summary: Submits an application details to a partner OP. Based on the details provided,  partner OP shall do bookkeeping, resource validation and other pre-deployment operations.
      operationId: OnboardApplication
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        required: true
        description: Details about application compute resource requirements, associated artefacts, QoS profile and regions where application shall be made available etc.
        content:
          application/json:
            schema:
              type: object
              required:
                - appId
                - appProviderId
                - appMetaData
                - appQoSProfile
                - appComponentSpecs
                - appStatusCallbackLink
              properties:
                appId:
                  $ref: '#/components/schemas/AppIdentifier'
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                appDeploymentZones:
                  description: Details about partner OP zones where the application should be made available;  This field when specified will instruct the OP to restrict application instantiation only on the listed zones.
                  type: array
                  items:
                    $ref: '#/components/schemas/ZoneIdentifier'
                  minItems: 1
                appMetaData:
                  $ref: '#/components/schemas/AppMetaData'
                appQoSProfile:
                  $ref: '#/components/schemas/AppQoSProfile'
                appComponentSpecs:
                  $ref: '#/components/schemas/AppComponentSpecs'
                appStatusCallbackLink:
                  $ref: '#/components/schemas/Uri'
      responses:
        "202":
          description: Application onboarded request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onApplicationOnboardStatusEvent:
          '{$request.body#/appStatusCallbackLink}':
            post:
              requestBody:
                description: Notification payload.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - appId
                        - statusInfo
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        appId:
                          $ref: '#/components/schemas/AppIdentifier'
                        statusInfo:
                          type: array
                          items:
                            type: object
                            required:
                              - zoneId
                              - onboardStatusInfo
                            properties:
                              zoneId:
                                $ref: '#/components/schemas/ZoneIdentifier'
                              onboardStatusInfo:
                                description: Defines change in application status. This change could be related to application itself or an application instance status
                                type: string
                                enum:
                                  - PENDING
                                  - ONBOARDED
                                  - DEBOARDING
                                  - REMOVED
                                  - FAILED
                          minItems: 1
              responses:
                "204":
                  description: Application status updated
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
  /{federationContextId}/application/onboarding/app/{appId}:
    delete:
      summary: Deboards the application from any zones, if any, and deletes the App.
      operationId: DeleteApp
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref:  '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
           $ref:  '#/components/schemas/AppIdentifier'
      responses:
        '200':
          description: App deletion successful
        '400':
            $ref: '#/components/responses/400'
        '401':
            $ref: '#/components/responses/401'
        '404':
            $ref: '#/components/responses/404'
        '409':
            $ref: '#/components/responses/409'
        '422':
            $ref: '#/components/responses/422'
        '500':
            $ref: '#/components/responses/500'
        '503':
            $ref: '#/components/responses/503'
        '520':
            $ref: '#/components/responses/520'
        default:
            $ref: '#/components/responses/default'
    patch:
      summary: Updates partner OP about changes in application compute resource requirements, QOS Profile, associated descriptor or change in associated components
      operationId: UpdateApplication
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
      requestBody:
        required: true
        description: Details about application compute resource requirements, associated artefact and QOS profile that needs to be updated.
        content:
          application/json:
            schema:
              type: object
              minProperties: 1
              properties:
                appUpdQoSProfile:
                  description: Parameters corresponding to the performance constraints, tenancy details etc.
                  type: object
                  anyOf:
                    - required:
                        - latencyConstraint
                    - required:
                        - bandwidthRequired
                    - required:
                        - mobilitySupport
                    - required:
                        - multiUserClients
                    - required:
                        - appProvisioning
                  properties:
                    latencyConstraints:
                      type: string
                      enum:
                        - NONE
                        - LOW
                        - ULTRALOW
                      description: Latency requirements for the application.Allowed values (non-standardized) are none, low and ultra-low. Ultra-Low may corresponds to range 15 - 30 msec, Low correspond to range 30 - 50 msec. None means 51 and above
                    bandwidthRequired:
                      type: integer
                      format: int32
                      minimum: 1
                      description: Data transfer bandwidth requirement (minimum limit) for the application. It should in Mbits/sec
                    mobilitySupport:
                      type: boolean
                      default: false
                      description: Indicates if an application is sensitive to user mobility and can be relocated. Default is âFALSEâ
                    multiUserClients:
                      type: string
                      enum:
                        - APP_TYPE_SINGLE_USER
                        - APP_TYPE_MULTI_USER
                      description: Single user type application are designed to serve just one client. Multi user type application is designed to serve multiple clients
                    noOfUsersPerAppInst:
                      type: integer
                      default: 1
                      description: Maximum no of clients that can connect to an instance of this application. This parameter is relevant only for application of type multi user
                    appProvisioning:
                      type: boolean
                      default: true
                      description: Define if application can be instantiated or not
                appComponentSpecs:
                  description: An application may consist of more than one component. Each component is associated with a descriptor and may exposes its services externally or internally.  App providers are required to provide details about all these components, their associated descriptors and their DNS names.
                  type: array
                  items:
                    type: object
                    required:
                      - componentName
                    anyOf:
                      - required:
                          - serviceNameNB
                      - required:
                          - serviceNameEW
                      - required:
                          - artefactId
                    properties:
                      serviceNameNB:
                        type: string
                        pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description: Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed over NBI. Access via serviceNameNB is restricted on specific ports. Platform shall expose component access externally via this DNS name
                      serviceNameEW:
                        type: string
                        pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description: Must be a valid RFC 1035 label name.  This defines the DNS name via which the component can be accessed via peer components. Access via serviceNameEW is open on all ports.   Platform shall not expose serviceNameEW externally outside edge.
                      componentName:
                        type: string
                        pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,62}[A-Za-z0-9]$
                        description: Must be a valid RFC 1035 label name.  Component name must be unique with an application
                      artefactId:
                        $ref: '#/components/schemas/ArtefactId'
                  minItems: 1
      responses:
        "202":
          description: Application update request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    get:
      summary: Retrieves application details from partner OP
      operationId: ViewApplication
      tags:
        - ApplicationOnboardingManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
      responses:
        "200":
          description: Application details
          content:
            application/json:
              schema:
                type: object
                required:
                  - appId
                  - appProviderId
                  - appDeploymentZones
                  - appMetaData
                  - appQoSProfile
                  - appComponentSpecs
                properties:
                  appId:
                    $ref: '#/components/schemas/AppIdentifier'
                  appProviderId:
                    $ref: '#/components/schemas/AppProviderId'
                  appDeploymentZones:
                    description: Details about partner OP zones where the application should be made available;  This field when specified will instruct the OP to restrict application instantiation only on the listed zones.
                    type: array
                    items:
                      type: object
                      required:
                        - countryCode
                        - zoneInfo
                      properties:
                        countryCode:
                          $ref: '#/components/schemas/CountryCode'
                        zoneInfo:
                          $ref: '#/components/schemas/ZoneIdentifier'
                    minItems: 1
                  appMetaData:
                    $ref: '#/components/schemas/AppMetaData'
                  appQoSProfile:
                    $ref: '#/components/schemas/AppQoSProfile'
                  appComponentSpecs:
                    $ref: '#/components/schemas/AppComponentSpecs'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/lcm:
    post:
      summary: Instantiates an application on a partner OP zone.
      operationId: InstallApp
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
      requestBody:
        description: Details about application and zones where application instance should be created. It also definea call back URI which the partner OP shall use update home OP about a change in instance status.
        content:
          application/json:
            schema:
              type: object
              required:
                - appId
                - appProviderId
                - appVersion
                - zoneInfo
                - appInstCallbackLink
              properties:
                appId:
                  $ref: '#/components/schemas/AppIdentifier'
                appVersion:
                  type: string
                  description: Version info of the application
                appProviderId:
                  $ref: '#/components/schemas/AppProviderId'
                zoneInfo:
                  type: object
                  required:
                    #- zoneId
                    - flavourId
                  properties:
                    zoneId:
                      type: string
                      #$ref: '#/components/schemas/ZoneIdentifier'
                    flavourId:
                      $ref: '#/components/schemas/FlavourId'
                    resourceConsumption:
                      type: string
                      enum:
                        - RESERVED_RES_SHALL
                        - RESERVED_RES_PREFER
                        - RESERVED_RES_AVOID
                        - RESERVED_RES_FORBID
                      default: RESERVED_RES_AVOID
                      description: Specifies if the application can be instantiated using pre-reserved resource or not.  App provider can pre-reserve a pool of compute resource on each zone.  'RESERVED_RES_SHALL' instruct OP to use only the pre-reserved resources. 'RESERVED_RES_PREFER' instruct to first try using pre-reserved resource, if none available go for non-reserved resources. 'RESERVED_RES_AVOID' instruct OP not to use pre-reserved resource if possible, it is a choice depending upon circumstances 'RESERVED_RES_FORBID' instruct OP not to use pre-reserved resources.
                    resPool:
                      type: string
                      pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                      description: Resource pool to be used for application instantiation on this zone.  Valid only if IE 'resourceConsumption' is set to 'RESERVED_RES_SHALL' or 'RESERVED_RES_PREFER'
                appInstCallbackLink:
                  $ref: '#/components/schemas/Uri'
      responses:
        "202":
          description: Application instance creation request accepted.
          content:
            application/json:
              schema:
                type: object
                required:
                  - zoneId
                  - appInstIdentifier
                properties:
                  zoneId:
                    $ref: '#/components/schemas/ZoneIdentifier'
                  appInstIdentifier:
                    $ref: '#/components/schemas/InstanceIdentifier'
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
      callbacks:
        onInstanceStatusEvent:
          '{$request.body#/appInstCallbackLink}':
            post:
              requestBody:
                description: Notification payload.
                content:
                  application/json:
                    schema:
                      type: object
                      required:
                        - federationContextId
                        - appId
                        - appInstanceId
                        - zoneId
                        - appInstanceInfo
                      properties:
                        federationContextId:
                          $ref: '#/components/schemas/FederationIdentifier'
                        appId:
                          $ref: '#/components/schemas/AppIdentifier'
                        appInstanceId:
                          $ref: '#/components/schemas/InstanceIdentifier'
                        zoneId:
                          $ref: '#/components/schemas/ZoneIdentifier'
                        appInstanceInfo:
                          type: object
                          properties:
                            appInstanceState:
                              type: string
                              enum:
                                - PENDING
                                - READY
                                - FAILED
                                - TERMINATING
                              description: Running status of the application instance.
                            message:
                              type: string
                              description: Event information or failure message.
                            accesspointInfo:
                              description: Information about the IP and Port exposed by the OP. Application clients shall use these access points to reach this application instance
                              type: array
                              items:
                                type: object
                                required:
                                  - interfaceId
                                  - accessPoints
                                properties:
                                  interfaceId:
                                    type: string
                                    pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                                    description: This is the interface Identifier that app provider defines when application is onboarded.
                                  accessPoints:
                                    $ref: '#/components/schemas/ServiceEndpoint'
                              minItems: 1
                          minProperties: 1
                        modificationDate:
                          type: string
                          format: date-time
                          description: Date and time of the instance state modification by partner OP.
              responses:
                "204":
                  description: Application instance state notification acknowledged
                "400":
                  $ref: '#/components/responses/400'
                "401":
                  $ref: '#/components/responses/401'
                "404":
                  $ref: '#/components/responses/404'
                "409":
                  $ref: '#/components/responses/409'
                "422":
                  $ref: '#/components/responses/422'
                "500":
                  $ref: '#/components/responses/500'
                "503":
                  $ref: '#/components/responses/503'
                "520":
                  $ref: '#/components/responses/520'
                default:
                  $ref: '#/components/responses/default'
  /{federationContextId}/application/lcm/app/{appId}/instance/{appInstanceId}/zone/{zoneId}:
    get:
      summary: Retrieves an application instance details from partner OP.
      operationId: GetAppInstanceDetails
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
        - name: appInstanceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InstanceIdentifier'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Application instance details
          content:
            application/json:
              schema:
                type: object
                properties:
                  appInstanceState:
                    $ref: '#/components/schemas/InstanceState'
                  accesspointInfo:
                    description: Information about the IP and Port exposed by the OP. Application clients shall use these access points to reach this application instance
                    type: array
                    items:
                      type: object
                      required:
                        - interfaceId
                        - accessPoints
                      properties:
                        interfaceId:
                          type: string
                          pattern: ^[A-Za-z0-9][A-Za-z0-9_]{6,30}[A-Za-z0-9]$
                          description: This is the interface identifier that app provider defines when application is onboarded.
                        accessPoints:
                          $ref: '#/components/schemas/ServiceEndpoint'
                    minItems: 1
                minProperties: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
    delete:
      summary: Terminate an application instance on a partner OP zone.
      operationId: RemoveApp
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
        - name: appInstanceId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/InstanceIdentifier'
        - name: zoneId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ZoneIdentifier'
      responses:
        "200":
          description: Application instance termination request accepted
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
  /{federationContextId}/application/lcm/app/{appId}/appProvider/{appProviderId}:
    get:
      summary: Retrieves all application instance of partner OP
      operationId: GetAllAppInstances
      tags:
        - ApplicationDeploymentManagement
      parameters:
        - name: federationContextId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/FederationContextId'
        - name: appId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppIdentifier'
        - name: appProviderId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AppProviderId'
      responses:
        "200":
          description: Application Instance details
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  required:
                    - zoneId
                    - appInstanceInfo
                  properties:
                    zoneId:
                      $ref: '#/components/schemas/ZoneIdentifier'
                    appInstanceInfo:
                      type: array
                      items:
                        type: object
                        required:
                          - appInstIdentifier
                          - appInstanceState
                        properties:
                          appInstIdentifier:
                            $ref: '#/components/schemas/InstanceIdentifier'
                          appInstanceState:
                            $ref: '#/components/schemas/InstanceState'
                      minItems: 1
                minItems: 1
        "400":
          $ref: '#/components/responses/400'
        "401":
          $ref: '#/components/responses/401'
        "404":
          $ref: '#/components/responses/404'
        "409":
          $ref: '#/components/responses/409'
        "422":
          $ref: '#/components/responses/422'
        "500":
          $ref: '#/components/responses/500'
        "503":
          $ref: '#/components/responses/503'
        "520":
          $ref: '#/components/responses/520'
        default:
          $ref: '#/components/responses/default'
